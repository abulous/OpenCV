
# GET ON UCSD-PROTECTED
sudo nano /etc/wpa_supplicant/wpa_supplicant.conf

network={
ssid="UCSD-PROTECTED"
key_mgmt=WPA-EAP
eap=PEAP
identity="youruserid@ucsd.edu"
password="yourpassword"
phase1="peapver=0"
phase2="auth=MSCHAPV2"
}

#Then restart networking.

cat /etc/os-release


# disable bluetooth and wireless hardware
dtoverlay=pi3-disable-bt
dtoverlay=pi3-disable-wifi

#Then you can turn off the bluetooth service:
$ sudo systemctl disable hciuart

# Move file from my pi to my host computer while logged onto my host. 
scp pi@192.168.0.7: /home/pi/cap.py   /Users/abe/Desktop

#Play movie: 
omxplayer  MovieName.mov

firmware Debian 

Network controller: Intel Corporation Wireless 7265 (rev 59)

You can install it using sudo dpkg -i /path/to/deb/file followed by sudo apt-get install -f

# sudo sysctl -w net.inet.udp.maxdgram=65535 #or whatever max value you want                                                                     # probably because of resizing interpolation or
# /proc/sys/net/core/rmem_default ...for pi                                                                     # from pickling. docs says it adds a little more data
## 2^16 65536 max udp for single packet                                                                    # Most important point is that the value returned from
# 280/210 = 4/3 aspect ratio. 

61182189 TCP-LINK

ssh-keygen -R 192.168.0.100

wget -O opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/3.4.1.zip
I would suggest explicitly setting your Python version for virtualenvwrapper inside your .profile file, like this:

# virtualenv and virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/local/bin/virtualenvwrapper.sh


cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.4.1/modules \
    -D BUILD_EXAMPLES=ON ..

WHERE'S CUDA !!???
/Developer/NVIDIA/CUDA-9.1/samples

DEBIAN INSTALL
https://www.debian.org/CD/http-ftp/

sudo fdisk -l
sudo dd if=~/Downloads/debian-9.4.0-amd64-DVD-1.iso of=/dev/sdb bs=4M; sync

https://wiki.debian.org/iwlwifi

<!-- Launch LXTerminal with Ctrl+Alt+t-->
    <keybind key="C-A-t">
      <action name="Execute">
        <command>lxterminal</command>
      </action>
    </keybind>

**if scp permission is denied**
chown username nameOfDirectory

** make user have sudo privileges**
# usermod -aG sudo username

**SKIP LOGIN**
sudo nano /usr/share/lightdm/lightdm.conf.d/01_debian.conf

autologin-user=username
autologin-user-timeout=0

sudo apt-get install git git-core

find / -type f -name "*.jpg"

nvcc --version
nvidia-smi
lspci

tar xvf tarball.tar.gz

*** monitor ram, cpu, etc ****
free
top
htop
https://www.binarytides.com/linux-command-check-memory-usage


## Update
To update your already installed distro to the latest `master` branch of `torch/distro` si$
```bash
./update.sh
```

## Test
You can test that all libraries are installed properly by running:
```bash
./test.sh


ps -aef
ps -f-u

pip3 install tqdm
pip3 install py-midi

midi manipulation: https://github.com/llSourcell/Music_Generator_Demo/blob/master/midi_manipulation.py

****WEB-CAM SETTINTS****
sudo apt-get install uvcdynctrl
sudo apt-get install guvcview
sudo guvcview # this adds the Focus and a few other controls to uvcdynctrl list
sudo chmod a+rw /dev/media0 # otherwise can't make the adjustments
#plug and unplug the camera then ...

** turn off auto exposure *** (3 is on, 1 is off)
uvcdynctrl -d video0 -s "Exposure, Auto" 1
uvcdynctrl -c, --clist # List available controls

